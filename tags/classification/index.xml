<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>classification on Progmatix 21</title>
    <link>https://progmatix21.github.io/tags/classification/</link>
    <description>Recent content in classification on Progmatix 21</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sun, 17 Dec 2023 11:13:10 +0530</lastBuildDate>
    
	<atom:link href="https://progmatix21.github.io/tags/classification/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Calibrate Your Classifier</title>
      <link>https://progmatix21.github.io/posts/calibrate-your-classifier/</link>
      <pubDate>Sun, 17 Dec 2023 11:13:10 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/calibrate-your-classifier/</guid>
      <description>Would you buy oranges weighed on an uncalibrated weighing scale?  Then why would you trust an uncalibrated classifier?</description>
    </item>
    
    <item>
      <title>Roc Curve Step by Step</title>
      <link>https://progmatix21.github.io/posts/roc-curve-step-by-step/</link>
      <pubDate>Wed, 01 Nov 2023 12:03:31 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/roc-curve-step-by-step/</guid>
      <description>The ROC curve is an important metric to compare classifiers.  Learn how to draw one step-by-step.</description>
    </item>
    
    <item>
      <title>Learning Curve</title>
      <link>https://progmatix21.github.io/posts/learning-curve/</link>
      <pubDate>Tue, 25 Jul 2023 11:13:23 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/learning-curve/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#9650;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 1000 || document.documentElement.scrollTop &gt; 1000) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Imagine you have four classifiers with similar accuracies.  Are they really
similar?  Plotting a learning curve might reveal a hidden side to these
classifiers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understand the Confusion Matrix</title>
      <link>https://progmatix21.github.io/posts/confusion-matrix/</link>
      <pubDate>Fri, 14 Jul 2023 11:51:17 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/confusion-matrix/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#9650;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 1000 || document.documentElement.scrollTop &gt; 1000) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;You&amp;rsquo;ve created a classification model and come across a new concept called
confusion matrix.  However tough it may seem, a classification model evaluation
is not complete unless you add in your confusion matrix.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>The Validation Curve</title>
      <link>https://progmatix21.github.io/posts/the-validation-curve/</link>
      <pubDate>Thu, 15 Jun 2023 12:23:01 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/the-validation-curve/</guid>
      <description>Sometimes, you need to know when to stop training your model; this curve helps you decide.  Let us see the validation curve applied to an Adaboost classifier use case.</description>
    </item>
    
    <item>
      <title>Likelihood ratio: keeping your classifier honest</title>
      <link>https://progmatix21.github.io/posts/classifier-slightly-better-than-random-guess/</link>
      <pubDate>Wed, 17 May 2023 16:13:01 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/classifier-slightly-better-than-random-guess/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#9650;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 1000 || document.documentElement.scrollTop &gt; 1000) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Imagine training a classifier on a dataset only to find your friend is almost
as good guessing at the target label, that too without looking at the data.
Is your classifier any good then?&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>