<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Progmatix 21</title>
    <link>https://progmatix21.github.io/</link>
    <description>Recent content on Progmatix 21</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 07 Jun 2022 11:58:19 +0530</lastBuildDate>
    
	<atom:link href="https://progmatix21.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Learning Curve</title>
      <link>https://progmatix21.github.io/posts/learning-curve/</link>
      <pubDate>Tue, 25 Jul 2023 11:13:23 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/learning-curve/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Imagine you have four classifiers with similar accuracies.  Are they really
similar?  Plotting a learning curve might reveal a hidden side to these
classifiers.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Understand the Confusion Matrix</title>
      <link>https://progmatix21.github.io/posts/confusion-matrix/</link>
      <pubDate>Fri, 14 Jul 2023 11:51:17 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/confusion-matrix/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;You&amp;rsquo;ve created a classification model and come across a new concept called
confusion matrix.  However tough it may seem, a classification model evaluation
is not complete unless you add in your confusion matrix.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Conda Takes Forever</title>
      <link>https://progmatix21.github.io/posts/conda-takes-forever/</link>
      <pubDate>Thu, 29 Jun 2023 11:33:55 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/conda-takes-forever/</guid>
      <description>Anaconda taking forever to update? Here is what worked for me.</description>
    </item>
    
    <item>
      <title>The Validation Curve</title>
      <link>https://progmatix21.github.io/posts/the-validation-curve/</link>
      <pubDate>Thu, 15 Jun 2023 12:23:01 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/the-validation-curve/</guid>
      <description>Sometimes, you need to know when to stop training your model; this curve helps you decide.  Let us see the validation curve applied to an Adaboost classifier use case.</description>
    </item>
    
    <item>
      <title>Likelihood ratio: keeping your classifier honest</title>
      <link>https://progmatix21.github.io/posts/classifier-slightly-better-than-random-guess/</link>
      <pubDate>Wed, 17 May 2023 16:13:01 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/classifier-slightly-better-than-random-guess/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Imagine training a classifier on a dataset only to find your friend is almost
as good guessing at the target label, that too without looking at the data.
Is your classifier any good then?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Reversing a linked list: cutaway</title>
      <link>https://progmatix21.github.io/posts/reversing-a-linked-list/</link>
      <pubDate>Tue, 09 May 2023 11:04:56 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/reversing-a-linked-list/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;A linked list is a sequential data structure.  A head pointer points to the
first node and each node has a pointer to the next.  The last node is suitably
terminated.  Manipulating a linked list is an exact exercise and reversing it
certainly so.  Would a cutaway view be helpful?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Dynamic Programming: Knapsack Problem</title>
      <link>https://progmatix21.github.io/posts/dynamic-programming-knapsack/</link>
      <pubDate>Fri, 28 Apr 2023 10:59:54 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/dynamic-programming-knapsack/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Dynamic Programming is an algorithmic technique to solve constrained,
combinatorial optimization problems.  The Knapsack here is a metaphor for the
constraint.  The &amp;lsquo;knapsack&amp;rsquo; might as well be a container ship.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Categorical vs Categorical Heatmap</title>
      <link>https://progmatix21.github.io/posts/categorical-vs-categorical-heatmap/</link>
      <pubDate>Sun, 02 Apr 2023 14:33:20 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/categorical-vs-categorical-heatmap/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Classification datasets often have a number of categorical variables.  There is
always the need to select the more important categorical variables for modelling,
especially in high-dimension datasets.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Perceptron From Scratch</title>
      <link>https://progmatix21.github.io/posts/perceptron-from-scratch/</link>
      <pubDate>Tue, 21 Mar 2023 11:24:17 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/perceptron-from-scratch/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Neural Networks are very fascinating, but they are very complicated to understand.
To simplify our understanding, we start with the simplest unit of the neural network
&amp;ndash; the perceptron. We want to understand what role
the perceptron plays and its functioning as a simple logical unit. This should hopefully
improve our understanding of a neural network.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Naive Bayes With Quantile Discretization</title>
      <link>https://progmatix21.github.io/posts/naive-bayes-with-quantile-discretization/</link>
      <pubDate>Thu, 23 Feb 2023 21:29:43 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/naive-bayes-with-quantile-discretization/</guid>
      <description>Often, classification datasets have a mix of continuous and categorical data. The continuous data typically have problems such as outliers, noise and lack of a defined distribution.</description>
    </item>
    
    <item>
      <title>Comb Sort Cutaway</title>
      <link>https://progmatix21.github.io/posts/comb-sort-cutaway/</link>
      <pubDate>Wed, 15 Feb 2023 10:28:29 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/comb-sort-cutaway/</guid>
      <description>What is comb-sort? Comb-sort is a newer and modified form of bubble-sort. It seeks to improve the time-complexity of the traditional bubble-sort.</description>
    </item>
    
    <item>
      <title>Bubble Sort Cutaway</title>
      <link>https://progmatix21.github.io/posts/bubble-sort-cutaway/</link>
      <pubDate>Tue, 31 Jan 2023 10:38:21 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/bubble-sort-cutaway/</guid>
      <description>What is bubble sort? Bubble sort is a relatively easy to understand and easy to implement algorithm. It was one of the earliest ones to be discovered.</description>
    </item>
    
    <item>
      <title>Binary Search Cutaway</title>
      <link>https://progmatix21.github.io/posts/binary-search-cutaway/</link>
      <pubDate>Thu, 26 Jan 2023 13:07:23 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/binary-search-cutaway/</guid>
      <description>What is binary search? Binary search is an algorithm for searching elements from a sorted array. It far outweighs in benefits compared to a linear search method.</description>
    </item>
    
    <item>
      <title>Create a dataframe: three ways</title>
      <link>https://progmatix21.github.io/posts/create-dataframe-three-ways/</link>
      <pubDate>Fri, 20 Jan 2023 17:26:05 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/create-dataframe-three-ways/</guid>
      <description>&lt;p&gt;At times it is necessary to create dataframes within a program. Learn
three ways to create them.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Choosing Right Colormap for Heatmap</title>
      <link>https://progmatix21.github.io/posts/choosing-right-colormap-for-heatmap/</link>
      <pubDate>Mon, 16 Jan 2023 11:37:32 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/choosing-right-colormap-for-heatmap/</guid>
      <description>&lt;p&gt;Heatmaps are used to visually represent correlation between various continuous features in a dataset. You can construct heatmaps and give them different colours for different values. This gives good visual appeal and makes it easier to understand.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Non-parametric One-way ANOVA</title>
      <link>https://progmatix21.github.io/posts/one_way_anova/</link>
      <pubDate>Wed, 14 Sep 2022 10:00:34 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/one_way_anova/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Regression datasets often have a mix of categorical and continuous predictor
variables. When the number of categorical variables is large, how do you pick
the ones that are relevant to the regression(i.e. correlated to the response
variable)?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Neat Wordcount Histograms</title>
      <link>https://progmatix21.github.io/posts/neat-wordcount-histograms/</link>
      <pubDate>Mon, 12 Sep 2022 17:41:37 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/neat-wordcount-histograms/</guid>
      <description>&lt;style&gt;
#myBtn {
  display: none;
  position: fixed;
  bottom: 20px;
  right: 30px;
  z-index: 99;
  font-size: 36px;
  font-weight: bold;
  border: none;
  outline: none;
  background-color: #444;
  color: white;
  cursor: pointer;
  padding: 15px;
  border-radius: 50%;
}

#myBtn:hover {
  background-color: #008080;
}
&lt;/style&gt;

&lt;button onclick=&#34;topFunction()&#34; id=&#34;myBtn&#34; title=&#34;Go to top&#34;&gt;&amp;#11161;&lt;/button&gt;


&lt;script&gt;

let mybutton = document.getElementById(&#34;myBtn&#34;);


window.onscroll = function() {scrollFunction()};

function scrollFunction() {
  if (document.body.scrollTop &gt; 20 || document.documentElement.scrollTop &gt; 20) {
    mybutton.style.display = &#34;block&#34;;
  } else {
    mybutton.style.display = &#34;none&#34;;
  }
}


function topFunction() {
  document.body.scrollTop = 0;
  document.documentElement.scrollTop = 0;
}
&lt;/script&gt;



&lt;p&gt;Most NLP projects require us to look at word counts in documents. The
traditional way is to draw histograms with vertical bars. But, are they
convenient?&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>Missing Value Analysis</title>
      <link>https://progmatix21.github.io/posts/missing-value-analysis/</link>
      <pubDate>Fri, 24 Jun 2022 22:12:49 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/posts/missing-value-analysis/</guid>
      <description>A succinct approach to MVA.</description>
    </item>
    
    <item>
      <title>About</title>
      <link>https://progmatix21.github.io/about/</link>
      <pubDate>Tue, 07 Jun 2022 11:58:19 +0530</pubDate>
      
      <guid>https://progmatix21.github.io/about/</guid>
      <description>Hi, welcome to my blog.
This is where I share my learnings in Data Science and related topics. Hope you find it useful.</description>
    </item>
    
  </channel>
</rss>